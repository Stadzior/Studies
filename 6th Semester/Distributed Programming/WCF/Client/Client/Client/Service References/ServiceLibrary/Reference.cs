//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceLibrary {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceLibrary.BookInfo InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceLibrary.BookInfo Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookInfo", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class BookInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BorrowDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdCurrentOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceLibrary.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BorrowDate {
            get {
                return this.BorrowDateField;
            }
            set {
                if ((this.BorrowDateField.Equals(value) != true)) {
                    this.BorrowDateField = value;
                    this.RaisePropertyChanged("BorrowDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdCurrentOwner {
            get {
                return this.IdCurrentOwnerField;
            }
            set {
                if ((this.IdCurrentOwnerField.Equals(value) != true)) {
                    this.IdCurrentOwnerField = value;
                    this.RaisePropertyChanged("IdCurrentOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceLibrary.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Borrowed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Available = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLibrary.IServiceLibrary")]
    public interface IServiceLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetBorrowedBooksByUser", ReplyAction="http://tempuri.org/IServiceLibrary/GetBorrowedBooksByUserResponse")]
        Client.ServiceLibrary.Book[] GetBorrowedBooksByUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetBorrowedBooksByUser", ReplyAction="http://tempuri.org/IServiceLibrary/GetBorrowedBooksByUserResponse")]
        System.Threading.Tasks.Task<Client.ServiceLibrary.Book[]> GetBorrowedBooksByUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetBookInfo", ReplyAction="http://tempuri.org/IServiceLibrary/GetBookInfoResponse")]
        Client.ServiceLibrary.BookInfo GetBookInfo(int idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetBookInfo", ReplyAction="http://tempuri.org/IServiceLibrary/GetBookInfoResponse")]
        System.Threading.Tasks.Task<Client.ServiceLibrary.BookInfo> GetBookInfoAsync(int idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/BorrowBook", ReplyAction="http://tempuri.org/IServiceLibrary/BorrowBookResponse")]
        Client.ServiceLibrary.Status BorrowBook(int idUser, int idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/BorrowBook", ReplyAction="http://tempuri.org/IServiceLibrary/BorrowBookResponse")]
        System.Threading.Tasks.Task<Client.ServiceLibrary.Status> BorrowBookAsync(int idUser, int idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/addUser", ReplyAction="http://tempuri.org/IServiceLibrary/addUserResponse")]
        string addUser(Client.ServiceLibrary.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/addUser", ReplyAction="http://tempuri.org/IServiceLibrary/addUserResponse")]
        System.Threading.Tasks.Task<string> addUserAsync(Client.ServiceLibrary.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLibraryChannel : Client.ServiceLibrary.IServiceLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLibraryClient : System.ServiceModel.ClientBase<Client.ServiceLibrary.IServiceLibrary>, Client.ServiceLibrary.IServiceLibrary {
        
        public ServiceLibraryClient() {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceLibrary.Book[] GetBorrowedBooksByUser(int idUser) {
            return base.Channel.GetBorrowedBooksByUser(idUser);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceLibrary.Book[]> GetBorrowedBooksByUserAsync(int idUser) {
            return base.Channel.GetBorrowedBooksByUserAsync(idUser);
        }
        
        public Client.ServiceLibrary.BookInfo GetBookInfo(int idBook) {
            return base.Channel.GetBookInfo(idBook);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceLibrary.BookInfo> GetBookInfoAsync(int idBook) {
            return base.Channel.GetBookInfoAsync(idBook);
        }
        
        public Client.ServiceLibrary.Status BorrowBook(int idUser, int idBook) {
            return base.Channel.BorrowBook(idUser, idBook);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceLibrary.Status> BorrowBookAsync(int idUser, int idBook) {
            return base.Channel.BorrowBookAsync(idUser, idBook);
        }
        
        public string addUser(Client.ServiceLibrary.User user) {
            return base.Channel.addUser(user);
        }
        
        public System.Threading.Tasks.Task<string> addUserAsync(Client.ServiceLibrary.User user) {
            return base.Channel.addUserAsync(user);
        }
    }
}
